version: '3.8'

services:
  # Storage Backend (Go + Gin)
  storage-backend:
    build:
      context: ./storage-backend
      dockerfile: Dockerfile
    container_name: lms-storage-backend
    ports:
      - "8080:8080"
    environment:
      - SERVER_ADDR=:8080
      - UPLOAD_TMP_DIR=/srv/lms/uploads/tmp
      - VIDEOS_DIR=/srv/lms/videos
      - MATERIALS_DIR=/srv/lms/materials
      - CHUNK_SIZE=16777216
      - MAX_CONCURRENT_UPLOADS=12
      - MERGE_WORKERS=3
      - MAIN_BACKEND_URL=http://main-backend:8000
      - JWT_SECRET=your-secret-key-change-in-production
    volumes:
      - lms_storage:/srv/lms
    networks:
      - lms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx for video/file serving
  nginx:
    image: nginx:alpine
    container_name: lms-nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - lms_storage:/srv/lms:ro
    networks:
      - lms-network
    depends_on:
      - storage-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lms-frontend
    ports:
      - "5173:80"
    networks:
      - lms-network
    depends_on:
      - storage-backend
    restart: unless-stopped

  # Mock Main Backend (for testing webhooks)
  # Remove or replace with your actual FastAPI backend
  mock-main-backend:
    image: mendhak/http-https-echo:latest
    container_name: lms-mock-backend
    ports:
      - "8000:8080"
    networks:
      - lms-network
    restart: unless-stopped

volumes:
  lms_storage:
    driver: local

networks:
  lms-network:
    driver: bridge
