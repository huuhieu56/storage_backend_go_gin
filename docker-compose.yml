version: '3.8'

services:
  # Storage Backend (Go + Gin)
  storage-backend:
    build:
      context: ./storage-backend
      dockerfile: Dockerfile
    container_name: lms-storage-backend
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      - PORT=8080
      - BASE_DIR=${BASE_DIR:-/app/file_uploads}
      - MAX_CONCURRENT_UPLOADS=${MAX_CONCURRENT_UPLOADS:-50}
      - FILE_WRITE_WORKERS=${FILE_WRITE_WORKERS:-30}
      - WRITE_QUEUE_SIZE=${WRITE_QUEUE_SIZE:-500}
      - UPLOAD_BUFFER_SIZE=${UPLOAD_BUFFER_SIZE:-67108864}
      - MERGE_BUFFER_SIZE=${MERGE_BUFFER_SIZE:-67108864}
      - HTTP_READ_TIMEOUT=${HTTP_READ_TIMEOUT:-600}
      - HTTP_WRITE_TIMEOUT=${HTTP_WRITE_TIMEOUT:-600}
    volumes:
      # DOCKER VOLUME: Named volume for persistent storage
      - lms-storage-data:/app/file_uploads
    networks:
      - lms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx for video streaming & file downloads
  nginx:
    image: nginx:alpine
    container_name: lms-nginx
    ports:
      - "${NGINX_PORT:-8081}:80"
    volumes:
      # BIND MOUNT: Nginx config (read-only) - keep this as bind mount for easy config changes
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # DOCKER VOLUME: Same storage volume (read-only for security)
      - lms-storage-data:/app/file_uploads:ro
    networks:
      - lms-network
    depends_on:
      - storage-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Frontend (React + Vite) - now uses relative URLs, no build args needed
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lms-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    networks:
      - lms-network
    depends_on:
      - storage-backend
      - nginx
    restart: unless-stopped

networks:
  lms-network:
    driver: bridge

volumes:
  # Pure Docker volume - managed by Docker, stored in /var/lib/docker/volumes/
  # All video/material data will be stored here
  lms-storage-data:
