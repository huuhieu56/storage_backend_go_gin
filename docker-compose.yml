version: '3.8'

services:
  # Storage Backend (Go + Gin)
  storage-backend:
    build:
      context: ./storage-backend
      dockerfile: Dockerfile
    container_name: lms-storage-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - BASE_UPLOAD_DIR=/app/file_uploads
      - MAX_CONCURRENT_UPLOADS=50
      - FILE_WRITE_WORKERS=30
      - WRITE_QUEUE_SIZE=500
      - UPLOAD_BUFFER_SIZE=67108864
      - MERGE_BUFFER_SIZE=67108864
      - HTTP_READ_TIMEOUT=600
      - HTTP_WRITE_TIMEOUT=600
    volumes:
      # BIND MOUNT: Host directory ./file_uploads -> Container /app/file_uploads
      - ./file_uploads:/app/file_uploads
    networks:
      - lms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx for video streaming & file downloads
  nginx:
    image: nginx:alpine
    container_name: lms-nginx
    ports:
      - "8081:80"
    volumes:
      # BIND MOUNT: Nginx config (read-only)
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # BIND MOUNT: Same file_uploads directory (read-only for security)
      - ./file_uploads:/app/file_uploads:ro
    networks:
      - lms-network
    depends_on:
      - storage-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lms-frontend
    ports:
      - "5173:80"
    environment:
      - VITE_STORAGE_API_URL=http://192.168.1.16:8080
      - VITE_NGINX_URL=http://192.168.1.16:8081
    networks:
      - lms-network
    depends_on:
      - storage-backend
      - nginx
    restart: unless-stopped

networks:
  lms-network:
    driver: bridge

# NO VOLUMES NEEDED! 
# Using bind mounts - all data stored in ./file_uploads on host machine
# Easy backup, easy access, no docker volume management needed!
