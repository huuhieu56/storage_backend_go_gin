# Main Nginx configuration for video streaming and file downloads
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream storage_backend {
        server cosign-storage-backend:8080;
        server 127.0.0.1:8080 backup;
    }

    upstream main_backend {
        server cosign-main-backend:8001;
        server 127.0.0.1:8001 backup;
    }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    server {
        listen 80;
        server_name storage.local;

        # Increase buffer sizes for large files
        client_max_body_size 0;
        client_body_buffer_size 16m;

    # API gateway routes
    location /api/storage/ {
        proxy_pass http://storage_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    location /api/ {
        proxy_pass http://main_backend$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Video streaming with Range 206 support
    location /videos/ {
        alias /app/file_uploads/videos/;
        
        # MIME types
        types {
            video/mp4 mp4;
        }
        
        # Enable range requests for seeking
        add_header Accept-Ranges bytes always;
        
        # CORS headers for video playback
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Range" always;
        
        # Performance optimizations for streaming
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        aio on;
        directio 4m;
        
        # Output buffer để giới hạn chunk size mỗi lần gửi
        # Giảm từ default (unlimited) xuống 512KB để browser không load quá nhanh
        output_buffers 2 512k;
        
        # Giới hạn rate (optional - bỏ comment nếu muốn limit bandwidth)
        # limit_rate_after 5m;  # Sau 5MB đầu tiên
        # limit_rate 2m;        # Giới hạn 2MB/s
        
        # Cache ngắn hơn cho linh hoạt
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Handle OPTIONS for CORS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Range" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Materials download
    location /materials/ {
        alias /app/file_uploads/materials/;
        
        # Force download for materials
        add_header Content-Disposition "attachment";
        add_header Accept-Ranges bytes always;
        
        # CORS headers
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        
        # Performance optimizations
        sendfile on;
        tcp_nopush on;
        
        # Caching
        expires 7d;
        add_header Cache-Control "public";
        
        # Handle OPTIONS for CORS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Health check
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    }

    # Optional: Cache zone for auth requests (for future use)
    # proxy_cache_path /var/cache/nginx/auth keys_zone=auth_cache:10m max_size=100m inactive=60s;
}
